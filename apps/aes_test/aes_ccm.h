#ifndef AES_CCM_H
#define CCM_KEY_SIZE   16
#define CCM_TAG_SIZE   4
#define CCM_ADATA_SIZE 8
#define CCM_NONCE_SIZE 8
#define CCM_PAY_SIZE   4
  
unsigned char ccm_key[CCM_KEY_SIZE] = {0x40, 0x41, 0x42, 0x43,
                                       0x44, 0x45, 0x46, 0x47,
				       0x48, 0x49, 0x4a, 0x4b,
				       0x4c, 0x4d, 0x4e, 0x4f};
// FIXME: the actual CCM_NONCE_SIZE here is 7.
//        However, it does not work on FPGA.
//        If set CCM_NONCE_SIZE=7, only the first 4 bytes are correctly loaded
// Solution: temporary change the CCM_NONCE_SIZE to 8, and add the last byte
//           as 0.
unsigned char ccm_nonce[CCM_NONCE_SIZE] = {0x10, 0x11, 0x12, 0x13,
					   0x14, 0x15, 0x16, 0x00};

unsigned char ccm_adata[CCM_ADATA_SIZE] = {0x00, 0x01, 0x02, 0x03,
					   0x04, 0x05, 0x06, 0x07};

unsigned char ccm_pay[CCM_PAY_SIZE] = {0x20, 0x21, 0x22, 0x23};

unsigned char ccm_cipher[CCM_TAG_SIZE + CCM_PAY_SIZE] = {0x71, 0x62, 0x01, 0x5b,
							 0x4d, 0xac, 0x25, 0x5d};
unsigned char ccm_key2[16] = {0x40, 0x41, 0x42, 0x43,
			      0x44, 0x45, 0x46, 0x47,
			      0x48, 0x49, 0x4a, 0x4b,
			      0x4c, 0x4d, 0x4e, 0x4f};

unsigned char ccm_nonce2[8] = {0x10, 0x11, 0x12, 0x13,
			       0x14, 0x15, 0x16, 0x17};

unsigned char ccm_adata2[16] = {0x00, 0x01, 0x02, 0x03,
				0x04, 0x05, 0x06, 0x07,
				0x08, 0x09, 0x0a, 0x0b,
				0x0c, 0x0d, 0x0e, 0x0f};

unsigned char ccm_pay2[16] = {0x20, 0x21, 0x22, 0x23,
			      0x24, 0x25, 0x26, 0x27,
			      0x28, 0x29, 0x2a, 0x2b,
			      0x2c, 0x2d, 0x2e, 0x2f};

unsigned char ccm_cipher2[16+6] = {0xd2, 0xa1, 0xf0, 0xe0,
				   0x51, 0xea, 0x5f, 0x62,
				   0x08, 0x1a, 0x77, 0x92,
				   0x07, 0x3d, 0x59, 0x3d,
				   0x1f, 0xc6, 0x4f, 0xbf,
				   0xac, 0xcd};
unsigned char ccm_key3[16] = {0x40, 0x41, 0x42, 0x43,
			      0x44, 0x45, 0x46, 0x47,
			      0x48, 0x49, 0x4a, 0x4b,
			      0x4c, 0x4d, 0x4e, 0x4f};

unsigned char ccm_nonce3[12] = {0x10, 0x11, 0x12, 0x13,
				0x14, 0x15, 0x16, 0x17,
				0x18, 0x19, 0x1a, 0x1b};

unsigned char ccm_adata3[20] = {0x00, 0x01, 0x02, 0x03,
				0x04, 0x05, 0x06, 0x07,
				0x08, 0x09, 0x0a, 0x0b,
				0x0c, 0x0d, 0x0e, 0x0f,
				0x10, 0x11, 0x12, 0x13};

unsigned char ccm_pay3[24] = {0x20, 0x21, 0x22, 0x23,
			      0x24, 0x25, 0x26, 0x27,
			      0x28, 0x29, 0x2a, 0x2b,
			      0x2c, 0x2d, 0x2e, 0x2f,
			      0x30, 0x31, 0x32, 0x33,
			      0x34, 0x35, 0x36, 0x37};

unsigned char ccm_cipher3[24+8] = {0xe3, 0xb2, 0x01, 0xa9,
				   0xf5, 0xb7, 0x1a, 0x7a,
				   0x9b, 0x1c, 0xea, 0xec,
				   0xcd, 0x97, 0xe7, 0x0b,
				   0x61, 0x76, 0xaa, 0xd9,
				   0xa4, 0x42, 0x8a, 0xa5,
				   0x48, 0x43, 0x92, 0xfb,
				   0xc1, 0xb0, 0x99, 0x51};
#define CCM_TEST_NUM 3
unsigned int key_size_list[CCM_TEST_NUM]	= {16, 16, 16};
unsigned int tag_size_list[CCM_TEST_NUM]	= {4, 6, 8};
unsigned int ad_size_list[CCM_TEST_NUM]	= {8, 16, 20};
unsigned int iv_size_list[CCM_TEST_NUM]	= {7, 8, 12};
unsigned int p_size_list[CCM_TEST_NUM]	= {4, 16, 24};
unsigned int c_size_list[CCM_TEST_NUM]  = {8, 22, 32};

unsigned int key_p_list[CCM_TEST_NUM]	= {(int) &ccm_key,
					   (int) &ccm_key2,
					   (int) &ccm_key3};
unsigned int iv_p_list[CCM_TEST_NUM]	= {(int) &ccm_nonce,
					   (int) &ccm_nonce2,
					   (int) &ccm_nonce3};
unsigned int payload_p_list[CCM_TEST_NUM]	= {(int) &ccm_pay,
					   (int) &ccm_pay2,
					   (int) &ccm_pay3};
unsigned int ad_p_list[CCM_TEST_NUM]	= {(int) &ccm_adata,
					   (int) &ccm_adata2,
					   (int) &ccm_adata3};
unsigned int cipher_p_list[CCM_TEST_NUM]	= {(int) &ccm_cipher,
					   (int) &ccm_cipher2,
					   (int) &ccm_cipher3};

#endif
